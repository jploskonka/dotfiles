# use zsh as default shell
set -sg escape-time 0

# enable mouse for scrolling. ONLY scrolling
# to use system copy/paste just hold option key in iterm2
set -g mode-mouse on
set -g mouse-resize-pane off
set -g mouse-select-pane off
set -g mouse-select-window off

# use CTRL + Space as prefix
# as space is used as <leader> in vim
set-option -g prefix C-' '

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# open new window in current directory
bind c new-window -c "#{pane_current_path}"

# resize panes like vim splits
# bind -n C-> resize-pane -L 10
# bind -n C-< resize-pane -R 10
# bind ; to command-prompt
# (I use `map ; :` in vim)
# bind ';' command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'

# source snapshot of tmuxline
source-file ~/.tmuxline.snapshot

# Don't rename window
set-option -g allow-rename off
